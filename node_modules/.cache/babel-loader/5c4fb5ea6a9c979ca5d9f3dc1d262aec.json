{"ast":null,"code":"var _jsxFileName = \"/Users/isang-a/Desktop/practice/parent-children-checkbox/src/Components/Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Checkbox() {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(false); // isChecked라는 변수\n  // 초기값은 false\n  // setIsChecked는 isChecked의 상태를 변화시키는 함수\n\n  const handleChecked = event => {\n    setIsChecked(event.target.checked); // event.target.checked를 참조 -> isChecked 변수의 값이 바뀐다\n  };\n\n  const color = isChecked ? 'green' : 'red';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"example\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"checkbox-title\",\n      children: \"Checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isChecked,\n      onChange: handleChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: isChecked ? \"Checked!!\" : \"Unchecked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkbox, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n\n_c = Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/Users/isang-a/Desktop/practice/parent-children-checkbox/src/Components/Checkbox.js"],"names":["React","useState","Checkbox","isChecked","setIsChecked","handleChecked","event","target","checked","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C,CADiC,CAEjC;AACA;AACA;;AAEA,QAAMI,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAZ,CAD+B,CAE/B;AACD,GAHD;;AAKA,QAAMC,KAAK,GAAGN,SAAS,GAAG,OAAH,GAAa,KAApC;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEA,SAAhC;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAOF,SAAS,GAAG,WAAH,GAAiB;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBuBD,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Checkbox() {\n  const [isChecked, setIsChecked] = useState(false);\n  // isChecked라는 변수\n  // 초기값은 false\n  // setIsChecked는 isChecked의 상태를 변화시키는 함수\n\n  const handleChecked = (event) => {\n    setIsChecked(event.target.checked);\n    // event.target.checked를 참조 -> isChecked 변수의 값이 바뀐다\n  };\n\n  const color = isChecked ? 'green' : 'red';\n\n\n  return (\n    <div className=\"example\">\n      <h2 className=\"checkbox-title\">Checkbox</h2>\n      <input type=\"checkbox\" checked={isChecked} onChange={handleChecked} />\n      <span>{isChecked ? \"Checked!!\" : \"Unchecked\"}</span>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}